// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Partner/User Model for donors and supporters
model Partner {
  id                 String    @id @default(cuid())
  email              String    @unique
  firstName          String
  lastName           String
  phoneNumber        String?
  organization       String?
  country            String
  preferredLanguage  String    @default("en")
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  stripeCustomerId   String?   @unique
  isActive           Boolean   @default(true)
  
  // Relations
  campaigns          Campaign[]
  payments           Payment[]
  communications     Communication[]
  
  @@map("partners")
}

// Language Model for European languages
model Language {
  id                        String       @id @default(cuid())
  name                      String       @unique
  nativeName                String
  iso639Code                String       @unique
  region                    String
  countries                 String[]
  speakerCount              Int
  flagUrl                   String
  isActive                  Boolean      @default(true)
  adoptionStatus            AdoptionStatus @default(AVAILABLE)
  translationNeedsSponsorship Boolean     @default(true)
  priority                  Int          @default(1)
  description               String?
  createdAt                 DateTime     @default(now())
  updatedAt                 DateTime     @updatedAt
  
  // Relations
  campaigns                 Campaign[]
  
  @@map("languages")
}

// Campaign Model for both adoption and translation sponsorship
model Campaign {
  id                    String        @id @default(cuid())
  type                  CampaignType
  partnerId             String
  languageId            String
  monthlyAmount         Int           // Amount in pence (£150 = 15000)
  currency              String        @default("GBP")
  startDate             DateTime      @default(now())
  endDate               DateTime?
  status                CampaignStatus @default(ACTIVE)
  stripeSubscriptionId  String?       @unique
  nextBillingDate       DateTime?
  notes                 String?
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  
  // Relations
  partner               Partner       @relation(fields: [partnerId], references: [id], onDelete: Cascade)
  language              Language      @relation(fields: [languageId], references: [id])
  payments              Payment[]
  
  @@map("campaigns")
  @@index([partnerId])
  @@index([languageId])
  @@index([status])
}

// Payment Model for transaction tracking
model Payment {
  id                    String        @id @default(cuid())
  campaignId            String
  partnerId             String
  amount                Int           // Amount in pence
  currency              String        @default("GBP")
  stripePaymentIntentId String?       @unique
  stripeInvoiceId       String?
  status                PaymentStatus @default(PENDING)
  paymentDate           DateTime      @default(now())
  failureReason         String?
  receiptUrl            String?
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  
  // Relations
  campaign              Campaign      @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  partner               Partner       @relation(fields: [partnerId], references: [id])
  
  @@map("payments")
  @@index([campaignId])
  @@index([partnerId])
  @@index([status])
}

// Admin User Model for dashboard access
model Admin {
  id                String      @id @default(cuid())
  email             String      @unique
  firstName         String
  lastName          String
  role              AdminRole   @default(VIEWER)
  passwordHash      String
  isActive          Boolean     @default(true)
  lastLoginAt       DateTime?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  
  // Relations
  communications    Communication[]
  
  @@map("admins")
}

// Communication Model for partner interaction tracking
model Communication {
  id            String            @id @default(cuid())
  partnerId     String
  adminId       String?
  type          CommunicationType
  subject       String
  content       String
  sentAt        DateTime          @default(now())
  followUpDate  DateTime?
  status        String            @default("sent")
  createdAt     DateTime          @default(now())
  
  // Relations
  partner       Partner           @relation(fields: [partnerId], references: [id], onDelete: Cascade)
  admin         Admin?            @relation(fields: [adminId], references: [id])
  
  @@map("communications")
  @@index([partnerId])
}

// Enums
enum AdoptionStatus {
  AVAILABLE
  ADOPTED
  PENDING
  WAITLIST
}

enum CampaignType {
  ADOPT_LANGUAGE
  SPONSOR_TRANSLATION
}

enum CampaignStatus {
  ACTIVE
  PAUSED
  CANCELLED
  COMPLETED
}

enum PaymentStatus {
  PENDING
  SUCCEEDED
  FAILED
  REFUNDED
}

enum AdminRole {
  SUPER_ADMIN
  CAMPAIGN_MANAGER
  FINANCE
  VIEWER
}

enum CommunicationType {
  EMAIL
  PHONE
  SMS
  NEWSLETTER
  WELCOME_SERIES
  PAYMENT_REMINDER
  IMPACT_REPORT
}

// Impact Story Model for testimonials and impact content
model ImpactStory {
  id            String              @id @default(cuid())
  title         String?
  content       String              // The testimonial or impact story content
  authorName    String              // Name of person giving testimonial
  location      String?             // Location/country (optional)
  email         String?             // Contact email (for public submissions)
  isPublished   Boolean             @default(false)
  isFeatured    Boolean             @default(false) // For highlighted center card
  displayOrder  Int                 @default(1)     // For ordering stories
  imageUrl      String?             // Optional image for the testimonial
  submissionType SubmissionType     @default(ADMIN) // How the story was created
  isApproved    Boolean             @default(false) // Admin approval for public submissions
  approvedAt    DateTime?           // When it was approved
  approvedBy    String?             // Admin who approved it
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
  
  @@map("impact_stories")
  @@index([isPublished, displayOrder])
  @@index([submissionType, isApproved])
}

enum SubmissionType {
  ADMIN      // Created by admin
  PUBLIC     // Submitted by public user
}

// Checkout Settings Model for admin-configurable checkout experience
model CheckoutSettings {
  id                    String    @id @default(cuid())
  // Currency configuration
  availableCurrencies   String[]  @default(["GBP", "EUR", "USD"])
  defaultCurrency       String    @default("GBP")
  
  // Amount configuration for Adopt Language campaign
  adoptLanguageDefaultAmount      Int       @default(15000) // £150 in pence
  adoptLanguagePresetAmounts      Int[]     @default([5000, 10000, 15000, 25000]) // £50, £100, £150, £250
  adoptLanguageMinAmount          Int       @default(1000)  // £10 minimum
  adoptLanguageMaxAmount          Int       @default(100000) // £1000 maximum
  
  // Amount configuration for Sponsor Translation campaign  
  sponsorTranslationDefaultAmount    Int       @default(15000) // £150 in pence
  sponsorTranslationPresetAmounts    Int[]     @default([5000, 10000, 15000, 25000]) // £50, £100, £150, £250
  sponsorTranslationMinAmount        Int       @default(1000)  // £10 minimum
  sponsorTranslationMaxAmount        Int       @default(100000) // £1000 maximum
  
  // Checkout flow configuration
  showOneTimeOption     Boolean   @default(false) // For future flexibility
  requirePhone          Boolean   @default(false)
  requireOrganization   Boolean   @default(false)
  
  // How did you hear from us options
  hearFromUsOptions     String[]  @default(["Search Engine", "Social Media", "Friend/Family", "Church", "Advertisement", "Email", "Other"])
  
  // Branding and messaging
  checkoutTitle         String    @default("Your generosity is transforming lives!")
  checkoutSubtitle      String    @default("Support Loveworld Europe's mission to reach every European language with the Gospel")
  
  // Hero section configuration
  heroEnabled           Boolean   @default(true)
  heroTitle             String    @default("YOU'RE A\nWORLD\nCHANGER")
  heroSubtitle          String    @default("Your generosity is transforming lives across Europe")
  heroBackgroundColor   String    @default("from-[#1226AA] to-blue-800")
  heroTextColor         String    @default("text-white")
  
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  
  @@map("checkout_settings")
}
